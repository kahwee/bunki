name: Compatibility Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  # Allow manual trigger
  workflow_dispatch:

jobs:
  test-bun-versions:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        bun-version: ["1.2.19", "latest"]

    name: Bun v${{ matrix.bun-version }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Bun ${{ matrix.bun-version }}
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ matrix.bun-version }}

      - name: Cache Bun dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: ${{ runner.os }}-bun-${{ matrix.bun-version }}-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-${{ matrix.bun-version }}-

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Build
        run: bun run build

      - name: Test basic functionality
        run: |
          # Create a test directory
          mkdir -p test-${{ matrix.bun-version }}
          cd test-${{ matrix.bun-version }}

          # Initialize a new site
          ../dist/cli.js init

          # Create a test post
          ../dist/cli.js new "Test Post" --tags "test,compatibility"

          # Generate the site
          ../dist/cli.js generate

          # Verify site was generated correctly
          if [ ! -f "dist/index.html" ]; then
            echo "Site generation failed"
            exit 1
          fi

          # Check for the test post
          if ! grep -q "Test Post" dist/index.html; then
            echo "Test post not found in generated site"
            exit 1
          fi

          # Check tag pages were created
          if [ ! -f "dist/tags/test/index.html" ]; then
            echo "Tag page not generated"
            exit 1
          fi

          echo "All compatibility tests passed for Bun v${{ matrix.bun-version }}"
